#include <SoftwareSerial.h>

SoftwareSerial mySerial(10, 11);// RX, TX
//unsigned char incomingByte;
byte tag1[] = {0xAD, 0xB5, 0x00};
byte tag2[] = {0x96, 0xC2, 0x00};

byte tag_1981840[] = {0xE2, 0x00, 0x00, 0x1C, 0x51, 0x16, 0x02, 0x24, 0x06, 0x50, 0xC6, 0xB8};
byte tag_296930[] = {0xE2, 0x00, 0x00, 0x1C, 0x51, 0x16, 0x02, 0x26, 0x06, 0x50, 0xCE, 0xB8};
byte tag_2201490[] = {0xE2, 0x00, 0x00, 0x1C, 0x51, 0x16, 0x02, 0x42, 0x6, 0x60, 0xDC, 0x95};
byte tag_214180[] = {0xE2, 0x00, 0x00, 0x1C, 0x51, 0x16, 0x02, 0x41, 0x06, 0x58, 0xD6, 0x6C};
byte tag_1981830[] = {0xE2, 0x00, 0x00, 0x1C, 0x51, 0x16, 0x02, 0x22, 0x06, 0x50, 0xC6, 0xB7};
byte tag_153860[] = {0xE2, 0x80, 0x68, 0x94, 0x00, 0x00, 0x40, 0x21, 0x05, 0x34, 0x98, 0x56};
byte tag_207670[] = {0xE2, 0x00, 0x00, 0x1C, 0x51, 0x16, 0x02, 0x31, 0x06, 0x50, 0xCF, 0x43};
byte tag_1731840[] = {0xE2, 0x00, 0x00, 0x1D, 0x44, 0x03, 0x02, 0x00, 0x10, 0x50, 0xAD, 0xB8};
byte tag_1202400[] = {0xE2, 0x80, 0x69, 0x95, 0x00, 0x00, 0x50, 0x16, 0x35, 0x49, 0x78, 0xF0};
byte tag_1731810[] = {0xE2, 0x00, 0x00, 0x1D, 0x44, 0x03, 0x01, 0x94, 0x10, 0x50, 0xAD, 0xB5};

byte tag_registered[10][12] = {
                            {0xE2, 0x00, 0x00, 0x1C, 0x51, 0x16, 0x02, 0x24, 0x06, 0x50, 0xC6, 0xB8},
                            {0xE2, 0x00, 0x00, 0x1C, 0x51, 0x16, 0x02, 0x26, 0x06, 0x50, 0xCE, 0x5D},
                            {0xE2, 0x00, 0x00, 0x1C, 0x51, 0x16, 0x02, 0x42, 0x6, 0x60, 0xDC, 0x95},
                            {0xE2, 0x00, 0x00, 0x1C, 0x51, 0x16, 0x02, 0x41, 0x06, 0x58, 0xD6, 0x6C},
                            {0xE2, 0x00, 0x00, 0x1C, 0x51, 0x16, 0x02, 0x22, 0x06, 0x50, 0xC6, 0xB7},
                            {0xE2, 0x80, 0x68, 0x94, 0x00, 0x00, 0x40, 0x21, 0x05, 0x34, 0x98, 0x56},
                            {0xE2, 0x00, 0x00, 0x1C, 0x51, 0x16, 0x02, 0x31, 0x06, 0x50, 0xCF, 0x43},
                            {0xE2, 0x00, 0x00, 0x1D, 0x44, 0x03, 0x02, 0x00, 0x10, 0x50, 0xAD, 0xB8},
                            {0xE2, 0x80, 0x69, 0x95, 0x00, 0x00, 0x50, 0x16, 0x35, 0x49, 0x78, 0xF0},
                            {0xE2, 0x00, 0x00, 0x1D, 0x44, 0x03, 0x01, 0x94, 0x10, 0x50, 0xAD, 0xB5}
                            };


byte data[12];
byte incomingByte;
byte a;

byte message[] =         {0xA5, 0x5A, 0x00, 0x08, 0x00, 0x08, 0x0D, 0x0A};
  byte hardwareversion[] = {0xA5, 0x5A, 0x00, 0x0B, 0x01, 0x02, 0x03, 0x05, 0x0E, 0x0D, 0x0A};
  byte getUIDp[] =         {0xA5, 0x5A, 0x00, 0x08, 0x04, 0x0C, 0x0D, 0x0A};
  byte looktag[] =         {0xA5, 0x5A, 0x00, 0x0A, 0x80, 0x00, 0x64, 0xEE, 0x0D, 0x0A};
  byte reads[] = {0xA5, 0x5A, 0x00, 0x19, 0x83, 0x30, 0x00, 0xE2, 0x00, 0x34, 0x11, 0xB8, 0x02, 0x01, 0x13, 0x83, 0x25, 0x85, 0x66, 0xFD, 0x6F, 0x02, 0x10, 0x0D, 0x0A};
  byte readdata[] = {0xA5, 0x5A, 0x00, 0x16, 0x84, 0x55, 0x55, 0x55, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x02, 0x00, 0x03, 0x91, 0x0D, 0x0A};
  byte getTID[] = {0xA5, 0x5A, 0x00, 0x0C, 0x8e, 0x00, 0x02, 0x00, 0x0C, 0x83, 0x0D, 0x0A};


void setup() {
  Serial.begin(115200);
  mySerial.begin(115200);
  delay(200);
  delay(200);
}

String value;
void loop() {
// put your main code here, to run repeatedly:
  a = 10;
  mySerial.write(looktag, sizeof(looktag));
//  delay(200);

  mySerial.listen();
  delay(100);
  byte i = 0;
  byte k = 0;
  while (mySerial.available() > 0) {
    incomingByte = mySerial.read();

    value += String(incomingByte, HEX);
    value += " ";
  //  Serial.print(incomingByte, HEX);
    
    if((i >= 7) && (i <= 18)){
      data[k] = incomingByte;
      // Serial.print(data[k]);
      k++;
    }
    i++;
  }
  // Serial.println();
    if(value.length() > 1){
    // Serial.print(value);
    Serial.println();
    value = "";
    }

//  delay(1000);
 


  for(byte y = 0; y < 12; y++){
      // Serial.print(tag_registered[x][y], HEX);
      Serial.print(data[y], HEX);
      Serial.print(" ");
   }
   Serial.println();



bool isPresent = true;
  for(byte x = 0; x < 10; x++){
    bool isPresent = true;
    for(byte y = 0; y < 12; y++){
     tag_registered[x][y];
     if(data[y] != tag_registered[x][y]){
        isPresent = false;
        break;
      } 
     }
     if(isPresent == true){
      Serial.println("TAG REGISTERED!");
      a = x;
      break;
     }
  }

  switch(a){
    case 0:
      Serial.println("tag_1981840");
      break;
    case 1:
      Serial.println("tag_296930");
      break;
    case 2:
      Serial.println("tag_2201490");
      break;
    case 3:
      Serial.println("tag_214180");
      break;
    case 4:
      Serial.println("tag_1981830");
      break;
    case 5:
      Serial.println("tag_153860");
      break;
    case 6:
      Serial.println("tag_207670");
      break;
    case 7:
      Serial.println("tag_1731840");
      break;
    case 8:
      Serial.println("tag_1202400");
      break;
    case 9:
      Serial.println("tag_1731810");
      break;    
  }

 
  delay(60);
}
